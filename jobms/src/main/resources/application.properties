#spring.application.name=job-service
# disabled since it is picked from config server

server.port=8082

#h2 database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#postgres db
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=embarkx
spring.datasource.password=embarkx
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# url used by jobms to register as a client in service registry
eureka.client.register-with-eureka=true
# jobms need to register with eureka server
eureka.client.fetch-registry=true
# jobms need to register with service registry

#Zipkin - In prod sample rate is reduced, since we don't need to trace every request -> it slows the system
management.tracing.sampling.probability=1.0
management.tracing.enabled=true

#Config Server Client
#spring.config.import=configserver:http://localhost:8080
# if we stop config server and start jobms, it may give error since communication is not established with both.
# so to avoid runtime error, we can set jobms as optional, but provide application name at that time(uncomment line 1),
# if not, application name will be UNKNOWN
spring.config.import=optional:configserver:http://localhost:8080

# to explicitly set application without launching default application
# <profile>.properties or application-<profile>.yml for profile-specific configuration (<profile> is replaced by the value of spring.profiles.active).
spring.profiles.active=dev

# Resilience4J - Circuit breaker -> 3 states: closed, half open, open
# Enable health indicator registration for companyBreaker(instance of circuit breaker) in Actuator
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
# Set the sliding window size to 10 calls for the companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
# Minimum 5 calls are required to evaluate the circuit for companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
# Allow up to 3 calls when in half-open state for companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
# Time duration to keep the circuit open before transitioning to half-open state (10 seconds)
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
# Set the failure rate threshold to 50% for companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
# Register the health indicator explicitly for companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
# Enable automatic transition from open to half-open state for companyBreaker
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
# Use count-based sliding window type for the companyBreaker circuit breaker
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# Resilience4J - Retry
# Configure Retry for 'companyBreaker' with maximum 5 attempts
resilience4j.retry.instances.companyBreaker.max-attempts=5
# and 2 seconds wait duration between attempts
resilience4j.retry.instances.companyBreaker.wait-duration=2s

# Actuator configuration
# Enable health checks for circuit breakers in Actuator
management.health.circuitbreakers.enabled=true
# Include the "health" endpoint in the exposed Actuator endpoints
management.endpoints.web.exposure.include=health
# Always show health details in Actuator responses
management.endpoint.health.show-details=always




